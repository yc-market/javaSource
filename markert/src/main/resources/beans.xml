<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context
     http://www.springframework.org/schema/context/spring-context.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop.xsd
     http://www.springframework.org/schema/tx
    http://www.springframework.org/schema/tx/spring-tx.xsd
    http://www.springframework.org/schema/mvc
    http://www.springframework.org/schema/mvc/spring-mvc.xsd">

	<!-- spring 包扫描 -->
	<context:component-scan base-package="com.yc" />
	
	<!-- ======================以下是 spring mvc 相关配置======================= -->
	<!-- spring mvc 用于处理静态资源 -->
	<mvc:default-servlet-handler />
	<!-- spring mvc 注解驱动 -->
	<mvc:annotation-driven />
	<!-- spring mvc 视图解析器 -->
	<bean id="jspViewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/" />
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- spring mvc 文件上传的解析器 -->
	<!-- <bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000" />
	</bean> -->
	<!-- 照片上传的bean -->
	 <bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver" >  
           <!--  最大为100M，单位为字节   -->
	     <property name="maxUploadSize" value="104857600"></property>      
	     <property name="defaultEncoding" value="utf-8"></property>     
	     <property name="maxInMemorySize" value="40960"></property>
	 </bean>  
	
	<!-- ======================以下是 mybatis 集成 spring 的相关配置======================= -->
	<!-- spring 数据源 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://127.0.0.1/market?useUnicode=true&amp;characterEncoding=UTF-8"/>
        <property name="username" value="root"/>
        <property name="password" value="a"/>
	</bean>
	<!-- mybatis 会话工厂 -->	
	 <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 引用 spring 数据源 -->
		<property name="dataSource" ref="dataSource"></property>
		<!-- 注册 mybatis 映射文件，纯接口方案可以省略这段配置 -->
		<property name="mapperLocations" value="classpath:com.yc.market..*.xml"></property>
		<!-- 配置其他 mybatis 框架属性 -->
		<property name="configurationProperties">
			<props>
				<prop key="logImpl">LOG4J</prop>
			</props>
		</property>
	</bean> 
	<!-- mapper 接口扫描bean，正确配置这个 bean 才能获取到 mybatis mapper -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.yc.market.dao" />
	</bean>
	
	<!-- ======================以下是 spring 事务管理的相关配置======================= -->
	<!-- spring 事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
	    <property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- spring 事务 advice（增强） 的管理者设置为transactionManager -->
    <tx:advice id="txAdvice" transaction-manager="txManager">
        <tx:attributes>
        	<!-- get开头与find开头的方法，配置为只读事务 -->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"/>
            <!-- 除以上两类（查询）方法，其他方法都开启普通事务 -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

	<!-- spring 事务切面配置 -->
    <aop:config>
        <aop:pointcut id="txPc" expression="execution(* com.yc.**.biz.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPc"/>
    </aop:config>

</beans>